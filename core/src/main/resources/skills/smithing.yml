display_name: '<lang.skill-smithing-displayname>'
icon: ANVIL
icon_data: 3510001
description: '<lang.skill-smithing-description>'

levelbar_title: '<lang.skill-smithing-level-bar>'
levelbar_color: YELLOW # You can choose between BLUE, YELLOW, GREEN, PINK, PURPLE, RED, WHITE
levelbar_style: SEGMENTED_6 # You can choose between SEGMENTED_6, SEGMENTED_10, SEGMENTED_12, SEGMENTED_20, and SOLID

quality_rounding_precision: 10 # Item's qualities will be rounded to the nearest multiple of the given number, this is to reduce on the inconsistencies between individually crafted items

quality_lore: # Lore placed on the item once its quality score equals or exceeds the given value PLUS the item material's intended
  # pivot point quality. Bit difficult to put into words, but here's an example:
  # Diamond gear surpasses vanilla level past a quality of 70, and I've decided "good" should be vanilla level.
  # That means diamond gear will be judged "great" if it's 50 quality points higher than that decided pivot point of 70, so 120.
  # Diamond gear will reach "peerless" if it surpasses 250 quality points beyond 70, so 320
  -500: '<lang.smithing-quality-terrible>' # -500 to -60 is considered "terrible"
  -60: '<lang.smithing-quality-shoddy>' # -60 to -30 is considered "shoddy"
  -30: '<lang.smithing-quality-decent>' # -30 to 0 is considered "decent"
  0: '<lang.smithing-quality-good>' # 0 to 25 is considered "good"
  30: '<lang.smithing-quality-great>' # etc.
  60: '<lang.smithing-quality-flawless>'
  90: '<lang.smithing-quality-masterful>'
  120: '<lang.smithing-quality-fabled>'
  150: '<lang.smithing-quality-peerless>' # anything 125 above its neutral value is considered peerless

# Tags
# Tags are simply numeric tags applied to the item.
# Any number tag can be applied to any item, but only the numbers in this list will display additional lore on the item
tag_lore: # The tag lores displayed on the item. If one is left empty, it is not displayed.
  0: '<lang.smithing-tag-plated>'
  1: '<lang.smithing-tag-untempered>'
  2: '<lang.smithing-tag-blunt>'
  3: '<lang.smithing-tag-razor-sharp>'
  4: '<lang.smithing-tag-well-fit>'
  5: '<lang.smithing-tag-red-hot>'
  6: '<lang.smithing-tag-white-hot>'
  7: '<lang.smithing-tag-unfit>'

# Error messages that are notified to the player if their item has a tag it's not allowed to have
tag_error_disallowed:
  0: '<lang.smithing-tag-disallowed-plated>'
  1: '<lang.smithing-tag-disallowed-untempered>'
  2: '<lang.smithing-tag-disallowed-blunt>'
  3: '<lang.smithing-tag-disallowed-razor-sharp>'
  4: '<lang.smithing-tag-disallowed-well-fit>'
  5: '<lang.smithing-tag-disallowed-red-hot>'
  6: '<lang.smithing-tag-disallowed-white-hot>'
  7: '<lang.smithing-tag-disallowed-unfit>'

# Error messages that are notified to the player if their item doesn't have a tag it needs to have
tag_error_required:
  0: '<lang.smithing-tag-required-plated>'
  1: '<lang.smithing-tag-required-untempered>'
  2: '<lang.smithing-tag-required-blunt>'
  3: '<lang.smithing-tag-required-razor-sharp>'
  4: '<lang.smithing-tag-required-well-fit>'
  5: '<lang.smithing-tag-required-red-hot>'
  6: '<lang.smithing-tag-required-white-hot>'
  7: '<lang.smithing-tag-required-unfit>'

# Scaling used by dynamic quantity modifier, which changes the amount of the resulting item depending on PLAYER SMITHING SKILL
quantity_scaling: '0.7/300 * %rating% + 0.1,MULTIPLIER,0,0.8'
# Scaling used by dynamic repair modifier, which repairs the item depending on PLAYER SMITHING SKILL
repair_scaling: '(0.7/300) * %rating% + 0.1,MULTIPLIER,none,none'
enabled: false

service_button_name_trading: "<lang.service_trading>"
service_button_name_training: "<lang.service_training>"
service_button_name_upgrading: "<lang.service_upgrading>"
service_button_name_ordering: "<lang.service_ordering>"
service_button_name_learning: "<lang.service_learning>"
service_button_name_investing: "<lang.service_investing>"
service_button_description_trading:
  - "<lang.service_description_trading>"
service_button_description_training:
  - "<lang.service_description_training>"
service_button_description_upgrading:
  - "<lang.service_description_upgrading>"
service_button_description_ordering:
  - "<lang.service_description_ordering>"
service_button_description_ordering_pending:
  - "<lang.service_description_ordering_pending>"
service_button_description_ordering_ready:
  - "<lang.service_description_ordering_ready>"
service_button_description_learning:
  - "<lang.service_description_learning>"
service_button_description_investing:
  - "<lang.service_description_investing>"
service_button_type_trading: LIME_DYE/9199203/9199202/9199201
service_button_type_training: LIME_DYE/9199209/9199208/9199207
service_button_type_upgrading: LIME_DYE/9199212/9199211/9199210
service_button_type_ordering: LIME_DYE/9199206/9199205/9199204
service_button_type_learning: LIME_DYE/9199215/9199214/9199213
service_button_type_investing: LIME_DYE/9199218/9199217/9199216

customize_all_villagers: false # If true, if an interacted villager does not have a custom trading configuration, they will be given one
# If false, the villager will need to explicitly be given one with a command
# TODO test again
delay_until_working: 24000 # When a villager gets a profession, it will take this duration (in game ticks, 1 ingame day by default) for them to start trading

demand_decay_per_day: 0.5 # Every time a trade is made the trade's "demand" stat increases, and this decays per day. This determines by how much it is reduced.
# For example, if a trade has been traded 20 times, a decay rate of 0.5 means the demand will be 10 the next day, 5 the day after, then 2, etc.
demand_max: 24 # To prevent demand getting out of control and taking too long to decay, here's a cap

# Determines the % price discount based on happiness, renown, and reputation (can be negative)
# By default this produces a discount of
# -20% to +20% from happiness -10 to 10
# -20% to +20% from reputation -100 to 100
# -20% to +20% from renown -100 to 100
# Totalling 60% off when a villager is perfectly happy and confident around you :)
# The price is first affected by the "demand" mechanic, and then reduced by discount. Finally, by the player's own discount (charisma) stat
discount: "(0.02 * %happiness%) + (0.002 * %reputation%) + (0.002 * %renown%)"

happiness_upper_limit: 10 # Happiness cannot go above this value
happiness_lower_limit: -10 # Happiness cannot go below this value
reputation_upper_limit: 100 # Reputation cannot exceed this value
reputation_lower_limit: -100 # Reputation cannot go below this value
renown_upper_limit: 100 # Renown cannot exceed this value
renown_lower_limit: -100 # Renown cannot go below this value
renown_unforgivable: -90 # If the player reaches a renown lower than this value, it can not go up again
reputation_unforgivable: -90 # If the player reaches a reputation lower than this value, it can not go up again

renown_kill_villager: -50 # Renown lost to all nearby villagers when a villager is killed
renown_kill_baby_villager: -75 # Renown lost to all nearby villagers when a baby villager is killed
renown_kill_iron_golem: -25 # Renown lost to all nearby villagers when an iron golem is killed
renown_hurt_villager: -5 # Renown lost to all nearby villagers when a villager is punched repeatedly (1 punch will start an "accident" timer, if the villager is punched again during the timer this penalty goes into effect)
renown_hurt_baby_villager: -10 # Renown lost to all nearby villagers when a baby villager is hurt repeatedly
renown_hurt_iron_golem: 0 # Renown lost to all nearby villagers when an iron golem is hurt repeatedly
renown_death_villager: -5 # Renown lost to all nearby villager if a villager merely dies under a player's watch
renown_death_baby_villager: -10 # Renown lost to all nearby villagers if a baby villager merely dies under a player's watch
renown_death_iron_golem: -2 # Renown lost to all nearby villagers if an iron golem merely dies under a player's watch
reputation_kill_villager: -50 # etc.
reputation_kill_baby_villager: -75
reputation_kill_iron_golem: -15
reputation_hurt_villager: -5
reputation_hurt_baby_villager: -10
reputation_hurt_iron_golem: 0
reputation_death_villager: 0
reputation_death_baby_villager: 0
reputation_death_iron_golem: 0
renown_hero: 20 # Renown gained when winning a raid
# There is no renown when losing a raid because losing a raid means all villagers are dead
renown_happiness: 1 # Renown gained when making a villager happy (this cannot be repeated on a single villager)

time_forgive_accidental_punch: 1200 # If a villager is hurt accidentally, they will forgive you. If they are hurt again during this timer, your reputation and renown goes down. (in game ticks, by default 1 minute)

happiness_deny_trading: -3 # If a villager has less than this amount of happiness, they will deny trading entirely
renown_deny_trading: -75 # If a villager has less than this amount of renown, they will deny trading entirely
happiness_renown_threshold: 8 # If a villager has more than this amount of happiness, the player's renown goes up to all nearby villagers
happiness_prevent_golem_spawning: -5 # If a villager has less than this amount of happiness, iron golems will not spawn from them

happiness_sources:
  imprisoned: -10 # If a villager has little space to move, they become very unhappy
  free: 1 # If a villager has plenty of space to move, they become happier
  depressing: -2 # If a villager has no decorations or nice things around, they become unhappier
  comfortable: 1 # If a villager has plenty of decorations and nice things around, they become happier
  dark: -2 # If a villager is in the dark, they become unhappier
  bright: 1 # If a villager is in a lit area, they become happier
  lonely: -2 # If a villager is alone with no other villagers around, they become unhappier
  overcrowded: -5 # If a villager is in an overcrowded space, they become unhappier
  accompanied: 1 # If a villager is accompanied by other villagers, they become happier
  fearful: -10 # If a villager is actively threatened by a zombie or player, they become very unhappy
  peaceful: 1 # If a villager has no active threats around, they become happier
  insecure: -1 # If a villager has not been traded with for a long time, they become unhappier
  secure: 1 # If a villager has recently been traded with, they are happier
  wounded: -1 # If a villager has taken damage, they are unhappier
  healed: 1 # If a villager is fully healed, they are happier
  distrusting: -3 # If a villager was recently harmed by the player, they are unhappier
  trusting: 1 # If a villager was not recently harmed by the player, they are happier
  reputation_trading: 0.02 # Happiness per trading reputation towards the player
  reputation_renown: 0.03 # Happiness per renown reputation towards the player

imprisonment_space_max: 25 # With less than 25 blocks of free walking space, the villager feels trapped
free_space_requirement: 50 # With over 50 blocks of free walking space, the villager feels free
depressing_luxuries_max: 5 # With less than 5 unique "nice things" around, the villager feels in a depressed place
comfort_required_things: 15 # With more than 15 unique "nice things" around, the villager feels in a nice place
darkness_max: 2 # With a light level of less than 2, the villager feels in the dark
brightness_requirement: 5 # With a light level of more than 5, the villager feels it's comfortably light
loneliness_max: 0 # With no other villagers around, the villager feels lonely
overcrowded_radius: 8
overcrowded_requirement: 5 # With at least 6 other villagers in a radius of 8 blocks, the villager feels overcrowded
accompanied_radius: 64
accompanied_requirement: 5 # With at least 5 other villagers around in a 64 block radius, the villager feels in company
insecurity_max: 96000 # If the villager has not been traded with for 96000 ticks (4 ingame days) the villager feels insecure :(
security_requirement: 12000 # If the villager has been traded with in the past 12000 ticks (half an ingame day) the villager feels secure :)
woundedness_max: 5 # If the villager has taken more than 5 damage, they feel wounded
distrusting_max: 96000 # If the villager was damaged in the past 96000 ticks (3 ingame days) by the player, they feel distrusting
trusting_requirement: 480000 # If the villager has not been damaged in the past 480000 ticks (20 ingame days), they feel more trusting

nice_things:
  - PAINTING
  - ITEM_FRAME
  - ARMOR_STAND
  - WOLF
  - CAT
  - PARROT
  - COW
  - PIG
  - CHICKEN
  - HORSE
  - DONKEY
  - LLAMA
  - CAMEL
  - RABBIT
  - SNIFFER
  - TRADER_LLAMA
  - BEE
  - IRON_GOLEM
  - LANTERN
  - SOUL_LANTERN
  - BOOKSHELF
  - WHITE_CARPET
  - PINK_CARPET
  - RED_CARPET
  - ORANGE_CARPET
  - YELLOW_CARPET
  - LIME_CARPET
  - GREEN_CARPET
  - CYAN_CARPET
  - LIGHT_BLUE_CARPET
  - BLUE_CARPET
  - PURPLE_CARPET
  - MAGENTA_CARPET
  - BLACK_CARPET
  - BROWN_CARPET
  - GRAY_CARPET
  - LIGHT_GRAY_CARPET
  - AMETHYST_BLOCK
  - AMETHYST_CLUSTER
  - ANVIL
  - CHIPPED_ANVIL
  - BROKEN_ANVIL
  - ENCHANTING_TABLE
  - CHEST
  - ENDER_CHEST
  - FLOWER_POT
  - FURNACE
  - BEACON
  - JUKEBOX
  - SMITHING_TABLE
  - CRAFTING_TABLE
  - COMPOSTER
  - SMOKER
  - BLAST_FURNACE
  - BARREL
  - FLETCHING_TABLE
  - LOOM
  - GRINDSTONE
  - STONECUTTER
  - LECTERN
  - BREWING_STAND
  - CARTOGRAPHY_TABLE
  - CAKE
  - WHITE_GLAZED_TERRACOTTA
  - PINK_GLAZED_TERRACOTTA
  - RED_GLAZED_TERRACOTTA
  - ORANGE_GLAZED_TERRACOTTA
  - YELLOW_GLAZED_TERRACOTTA
  - LIME_GLAZED_TERRACOTTA
  - GREEN_GLAZED_TERRACOTTA
  - CYAN_GLAZED_TERRACOTTA
  - LIGHT_BLUE_GLAZED_TERRACOTTA
  - BLUE_GLAZED_TERRACOTTA
  - PURPLE_GLAZED_TERRACOTTA
  - MAGENTA_GLAZED_TERRACOTTA
  - BLACK_GLAZED_TERRACOTTA
  - BROWN_GLAZED_TERRACOTTA
  - GRAY_GLAZED_TERRACOTTA
  - LIGHT_GRAY_GLAZED_TERRACOTTA
  - WHITE_STAINED_GLASS
  - PINK_STAINED_GLASS
  - RED_STAINED_GLASS
  - ORANGE_STAINED_GLASS
  - YELLOW_STAINED_GLASS
  - LIME_STAINED_GLASS
  - GREEN_STAINED_GLASS
  - CYAN_STAINED_GLASS
  - LIGHT_BLUE_STAINED_GLASS
  - BLUE_STAINED_GLASS
  - PURPLE_STAINED_GLASS
  - MAGENTA_STAINED_GLASS
  - BLACK_STAINED_GLASS
  - BROWN_STAINED_GLASS
  - GRAY_STAINED_GLASS
  - LIGHT_GRAY_STAINED_GLASS
  - WHITE_STAINED_GLASS_PANE
  - PINK_STAINED_GLASS_PANE
  - RED_STAINED_GLASS_PANE
  - ORANGE_STAINED_GLASS_PANE
  - YELLOW_STAINED_GLASS_PANE
  - LIME_STAINED_GLASS_PANE
  - GREEN_STAINED_GLASS_PANE
  - CYAN_STAINED_GLASS_PANE
  - LIGHT_BLUE_STAINED_GLASS_PANE
  - BLUE_STAINED_GLASS_PANE
  - PURPLE_STAINED_GLASS_PANE
  - MAGENTA_STAINED_GLASS_PANE
  - BLACK_STAINED_GLASS_PANE
  - BROWN_STAINED_GLASS_PANE
  - GRAY_STAINED_GLASS_PANE
  - LIGHT_GRAY_STAINED_GLASS_PANE
  - CAMPFIRE
  - SOUL_CAMPFIRE
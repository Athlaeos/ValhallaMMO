display_name: '<lang.skill-smithing-displayname>'
icon: ANVIL
icon_data: 3510001
description: '<lang.skill-smithing-description>'

levelbar_title: '<lang.skill-smithing-level-bar>'
levelbar_color: YELLOW # You can choose between BLUE, YELLOW, GREEN, PINK, PURPLE, RED, WHITE
levelbar_style: SEGMENTED_6 # You can choose between SEGMENTED_6, SEGMENTED_10, SEGMENTED_12, SEGMENTED_20, and SOLID

quality_lore: # Lore placed on the item once its quality score equals or exceeds the given value PLUS the item material's intended
  # pivot point quality. Bit difficult to put into words, but here's an example:
  # Diamond gear surpasses vanilla level past a quality of 70, and I've decided "good" should be vanilla level.
  # That means diamond gear will be judged "great" if it's 50 quality points higher than that decided pivot point of 70, so 120.
  # Diamond gear will reach "peerless" if it surpasses 250 quality points beyond 70, so 320
  -500: '<lang.smithing-quality-terrible>'
  -50: '<lang.smithing-quality-shoddy>'
  -25: '<lang.smithing-quality-decent>'
  0: '<lang.smithing-quality-good>'
  50: '<lang.smithing-quality-great>'
  100: '<lang.smithing-quality-flawless>'
  150: '<lang.smithing-quality-masterful>'
  200: '<lang.smithing-quality-fabled>'
  250: '<lang.smithing-quality-peerless>'

# Tags
# Tags are simply numeric tags applied to the item.
# Any number tag can be applied to any item, but only the numbers in this list will display additional lore on the item
tag_lore: # The tag lores displayed on the item. If one is left empty, it is not displayed.
  1: '<lang.smithing-tag-unenchantable>'
  2: '<lang.smithing-tag-unmendable>'
  3: '<lang.smithing-tag-razor-sharp>'
  4: '<lang.smithing-tag-well-fit>'
  5: '<lang.smithing-tag-red-hot>'
  6: '<lang.smithing-tag-white-hot>'

# Error messages that are notified to the player if their item has a tag it's not allowed to have
tag_error_disallowed:
  1: '<lang.smithing-tag-disallowed-unenchantable>'
  2: '<lang.smithing-tag-disallowed-unmendable>'
  3: '<lang.smithing-tag-disallowed-razor-sharp>'
  4: '<lang.smithing-tag-disallowed-well-fit>'
  5: '<lang.smithing-tag-disallowed-red-hot>'
  6: '<lang.smithing-tag-disallowed-white-hot>'

# Error messages that are notified to the player if their item doesn't have a tag it needs to have
tag_error_required:
  1: '<lang.smithing-tag-required-unenchantable>'
  2: '<lang.smithing-tag-required-unmendable>'
  3: '<lang.smithing-tag-required-razor-sharp>'
  4: '<lang.smithing-tag-required-well-fit>'
  5: '<lang.smithing-tag-required-red-hot>'
  6: '<lang.smithing-tag-required-white-hot>'

# Scaling used by dynamic quantity modifier, which changes the amount of the resulting item depending on PLAYER SMITHING SKILL
quantity_scaling: '0.8/300 * %rating%,MULTIPLIER,0,0.8'
# Scaling used by dynamic repair modifier, which repairs the item depending on PLAYER SMITHING SKILL
repair_scaling: '(0.7/300) * %rating% + 0.1,MULTIPLIER,none,none'

# Scalings are simply math equations with a variable representing some kind of stat, in this case ITEM QUALITY
#
# Scalings are formatted like so: EXPRESSION,MODE,LOWERBOUND,UPPERBOUND
# Valid modes are MULTIPLIER and ADD_ON_DEFAULT.
# MULTIPLIER multiplies the respective value (in this case item base durability) with the outcome of the formula.
# ADD_ON_DEFAULT instead adds the number to the respective value.
#
# If the scaling is improperly formatted, the default value will be used instead and warnings will be displayed in console.
#
# Example assuming the default formula used:
# A wooden tool has a max durability of 60, if the outcome of the wood formula is 0.5(which occurs at 0 quality) its
# custom durability will be 30.
# If said wooden tool instead had a quality of 150, the formula would produce 5.1 which will multiply the tool's base
# durability of 60 to 306

# I used this formula to calculate how much quality I want each material to equate to 100% base stats, the same as vanilla strength
# https://www.desmos.com/calculator/yrtbpvietl
# I know it looks complicated, but really all this does is make sure the line will progress from the desired point at x=0 to x=300
# This graph shows the wood durability scaling by default.
# The b-slider represents the 0.8 in the formula, which represents the minimum value of the formula at 0 quality (80% in this case)
# The a-slider represents the 9.2 in the formula, which determines how much that 0.8 will go up over the course of 300 quality points (0.8 to 10 over 300pts)
# The q-slider represents the quality at which you want the material to reach vanilla strength
#
# The intersection between y = 1 and the orange line represents how much 300 and %rating% should be subtracted by to produce
# 100% base stats at the specified quality value for MULTIPLIER-type scalings, or in this case 24 at q=30
# (I want wood to reach vanilla strength at 30 quality)
# For ADD_ON_DEFAULT-type scalings you should intersect with y = 0
scaling_durability:
  wood: '(9.2/296.444) * (%rating% - 3.556) + 0.8,MULTIPLIER,0,none' # vanilla at 10 quality
  bow: '(2/333.3) * (%rating% + 33.3) + 0.5,MULTIPLIER,0,none' # vanilla at 50 quality
  crossbow: '(2.5/312.5) * (%rating% + 12.5) + 0.5,MULTIPLIER,0,none' # vanilla at 50 quality
  leather: '(5.2/301.6) * (%rating% + 1.6) + 0.8,MULTIPLIER,0,none' # vanilla at 10 quality
  stone: '(5.5/297) * (%rating% - 3) + 0.5,MULTIPLIER,0,none' # vanilla at 30 quality
  chainmail: '(3.5/315) * (%rating% + 15) + 0.5,MULTIPLIER,0,none' # vanilla at 30 quality
  gold: '(7.7/275) * (%rating% - 25) + 0.3,MULTIPLIER,0,none' # vanilla at 50 quality
  iron: '(3.6/300) * %rating% + 0.4,MULTIPLIER,0,none' # vanilla at 50 quality
  diamond: '(2.7/310.5) * (%rating% + 10.5) + 0.3,MULTIPLIER,0,none' # vanilla at 70 quality
  netherite: '(2.8/294) * (%rating% - 6) + 0.2,MULTIPLIER,0,none' # vanilla at 70 quality
  prismarine: '(3.5/280) * (%rating% - 20) + 0.5,MULTIPLIER,0,none' # vanilla at 60 quality
  enderic: '(2.0/293.33) * (%rating% - 6.67) + 0.5,MULTIPLIER,0,none' # vanilla at 80 quality
  other: '(1.7/160) * (%rating% - 140) + 0.8,MULTIPLIER,0,none' # vanilla at 0 quality

# The same as durability, but for damage numbers.
# Damage numbers are rounded to 1 decimal
# Damage numbers are only updated once after crafting and again after sharpening
# Keep in mind these damage values are further updated by the type of tool used to attack
# Bows are an exception where instead it IS a multiplier translating to arrow velocity instead, which is more damage.
scaling_damage:
  wood: '(5/362.5) * (%rating% + 62.5) - 1,ADD_ON_DEFAULT,none,none' # vanilla at 10 quality
  leather: '(5/362.5) * (%rating% + 62.5) - 1,ADD_ON_DEFAULT,none,none' # vanilla at 10 quality
  stone: '(7/378) * (%rating% + 78) - 2,ADD_ON_DEFAULT,none,none' # vanilla at 30 quality
  chainmail: '(7/378) * (%rating% + 78) - 2,ADD_ON_DEFAULT,none,none' # vanilla at 30 quality
  gold: '(7/350) * (%rating% + 50) - 2,ADD_ON_DEFAULT,none,none' # vanilla at 50 quality
  iron: '(6.5/361.11) * (%rating% + 61.11) - 2,ADD_ON_DEFAULT,none,none' # vanilla at 50 quality
  diamond: '(7/322) * (%rating% + 22) - 2,ADD_ON_DEFAULT,none,none' # vanilla at 70 quality
  netherite: '(8/280) * (%rating% - 20) - 2,ADD_ON_DEFAULT,none,none' # vanilla at 90 quality
  prismarine: '(7/336) * (%rating% + 36) - 2,ADD_ON_DEFAULT,none,none' # vanilla at 60 quality
  bow: '(0.7/350) * (%rating% + 50) + 0.8,MULTIPLIER,0,none' # vanilla at 50 quality
  crossbow: '(0.7/250) * (%rating% - 50) + 1,MULTIPLIER,0,none' # vanilla at 50 quality
  enderic: '(8/293.33) * (%rating% - 6.67) - 2,ADD_ON_DEFAULT,none,none' # vanilla at 80 quality
  other: '(6/450) * (%rating% + 150) - 2,ADD_ON_DEFAULT,none,none' # vanilla at 0 quality

scaling_shot_power:
  bow: '(6.5/361.11) * (%rating% + 61.11) - 2,MULTIPLIER,0,none' # default at 50 quality
  crossbow: '(7/350) * (%rating% + 50) - 2,MULTIPLIER,0,none' # default at 50 quality

scaling_speed:
  wood: '(0.6/435) * (%rating% + 135) - 0.2,ADD_ON_DEFAULT,none,none' # etc.
  leather: '(0.6/435) * (%rating% + 135) - 0.2,ADD_ON_DEFAULT,none,none'
  stone: '(0.6/405) * (%rating% + 105) - 0.2,ADD_ON_DEFAULT,none,none'
  chainmail: '(0.6/405) * (%rating% + 105) - 0.2,ADD_ON_DEFAULT,none,none'
  gold: '(0.6/375) * (%rating% + 75) - 0.2,ADD_ON_DEFAULT,none,none'
  iron: '(0.6/375) * (%rating% + 75) - 0.2,ADD_ON_DEFAULT,none,none'
  diamond: '(0.6/345) * (%rating% + 45) - 0.2,ADD_ON_DEFAULT,none,none'
  netherite: '(0.6/315) * (%rating% + 15) - 0.2,ADD_ON_DEFAULT,none,none'
  prismarine: '(0.6/360) * (%rating% + 60) - 0.2,ADD_ON_DEFAULT,none,none'
  enderic: '(0.6/330) * (%rating% + 30) - 0.2,ADD_ON_DEFAULT,none,none'
  bow: '(0.6/375) * (%rating% + 75) - 0.2,ADD_ON_DEFAULT,none,none'
  crossbow: '(0.6/375) * (%rating% + 75) - 0.2,ADD_ON_DEFAULT,none,none'
  other: '(0.6/300) * %rating% - 0.2,ADD_ON_DEFAULT,none,none'

scaling_armor:
  wood: '(1.2/348) * (%rating% + 48) + 0.8,MULTIPLIER,0,none'
  leather: '(1.2/348) * (%rating% + 48) + 0.8,MULTIPLIER,0,none'
  stone: '(1.2/324) * (%rating% + 24) + 0.8,MULTIPLIER,0,none'
  chainmail: '(1.2/324) * (%rating% + 24) + 0.8,MULTIPLIER,0,none'
  gold: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  iron: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  diamond: '(1.2/276) * (%rating% - 24) + 0.8,MULTIPLIER,0,none'
  netherite: '(1.2/252) * (%rating% - 48) + 0.8,MULTIPLIER,0,none'
  prismarine: '(1.2/288) * (%rating% - 12) + 0.8,MULTIPLIER,0,none'
  enderic: '(1.2/264) * (%rating% - 36) + 0.8,MULTIPLIER,0,none'
  bow: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  crossbow: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  other: '(1.2/360) * (%rating% + 60) + 0.8,MULTIPLIER,0,none'

scaling_armor_toughness:
  wood: '(1.2/348) * (%rating% + 48) + 0.8,MULTIPLIER,0,none'
  leather: '(1.2/348) * (%rating% + 48) + 0.8,MULTIPLIER,0,none'
  stone: '(1.2/324) * (%rating% + 24) + 0.8,MULTIPLIER,0,none'
  chainmail: '(1.2/324) * (%rating% + 24) + 0.8,MULTIPLIER,0,none'
  gold: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  iron: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  diamond: '(1.2/276) * (%rating% - 24) + 0.8,MULTIPLIER,0,none'
  netherite: '(1.2/252) * (%rating% - 48) + 0.8,MULTIPLIER,0,none'
  prismarine: '(1.2/288) * (%rating% - 12) + 0.8,MULTIPLIER,0,none'
  enderic: '(1.2/264) * (%rating% - 36) + 0.8,MULTIPLIER,0,none'
  bow: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  crossbow: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  other: '(1.2/360) * (%rating% + 60) + 0.8,MULTIPLIER,0,none'

scaling_armor_knockbackresist:
  wood: '(1.2/348) * (%rating% + 48) + 0.8,MULTIPLIER,0,none'
  leather: '(1.2/348) * (%rating% + 48) + 0.8,MULTIPLIER,0,none'
  stone: '(1.2/324) * (%rating% + 24) + 0.8,MULTIPLIER,0,none'
  chainmail: '(1.2/324) * (%rating% + 24) + 0.8,MULTIPLIER,0,none'
  gold: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  iron: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  diamond: '(1.2/276) * (%rating% - 24) + 0.8,MULTIPLIER,0,none'
  netherite: '(1.2/252) * (%rating% - 48) + 0.8,MULTIPLIER,0,none'
  prismarine: '(1.2/288) * (%rating% - 12) + 0.8,MULTIPLIER,0,none'
  enderic: '(1.2/264) * (%rating% - 36) + 0.8,MULTIPLIER,0,none'
  bow: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  crossbow: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  other: '(1.2/360) * (%rating% + 60) + 0.8,MULTIPLIER,0,none'

scaling_health:
  bow: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  crossbow: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  wood: '(1.2/348) * (%rating% + 48) + 0.8,MULTIPLIER,0,none'
  leather: '(1.2/348) * (%rating% + 48) + 0.8,MULTIPLIER,0,none'
  stone: '(1.2/324) * (%rating% + 24) + 0.8,MULTIPLIER,0,none'
  chainmail: '(1.2/324) * (%rating% + 24) + 0.8,MULTIPLIER,0,none'
  gold: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  iron: '(1.2/300) * (%rating% - 0) + 0.8,MULTIPLIER,0,none'
  diamond: '(1.2/276) * (%rating% - 24) + 0.8,MULTIPLIER,0,none'
  netherite: '(1.2/252) * (%rating% - 48) + 0.8,MULTIPLIER,0,none'
  prismarine: '(1.2/288) * (%rating% - 12) + 0.8,MULTIPLIER,0,none'
  enderic: '(1.2/264) * (%rating% - 36) + 0.8,MULTIPLIER,0,none'
  other: '(1.2/360) * (%rating% + 60) + 0.8,MULTIPLIER,0,none'

scaling_movement_speed:
  wood: '(0.2/290) * (%rating% - 10),ADD_ON_DEFAULT,none,none'
  leather: '(0.2/290) * (%rating% - 10),ADD_ON_DEFAULT,none,none'
  stone: '(0.2/270) * (%rating% - 30),ADD_ON_DEFAULT,none,none'
  chainmail: '(0.2/270) * (%rating% - 30),ADD_ON_DEFAULT,none,none'
  gold: '(0.2/250) * (%rating% - 50),ADD_ON_DEFAULT,none,none'
  iron: '(0.2/250) * (%rating% - 50),ADD_ON_DEFAULT,none,none'
  diamond: '(0.2/230) * (%rating% - 70),ADD_ON_DEFAULT,none,none'
  netherite: '(0.2/210) * (%rating% - 90),ADD_ON_DEFAULT,none,none'
  prismarine: '(0.2/240) * (%rating% - 60),ADD_ON_DEFAULT,none,none'
  enderic: '(0.2/220) * (%rating% - 80),ADD_ON_DEFAULT,none,none'
  bow: '(0.2/250) * (%rating% - 50),ADD_ON_DEFAULT,none,none'
  crossbow: '(0.2/250) * (%rating% - 50),ADD_ON_DEFAULT,none,none'
  other: '(0.2/300) * %rating%,ADD_ON_DEFAULT,none,none'

scaling_knockback:
  wood: '(0.7/257.78) * (%rating% - 42.22) + 0.1,ADD_ON_DEFAULT,none,none'
  leather: '(0.7/257.78) * (%rating% - 42.22) + 0.1,ADD_ON_DEFAULT,none,none'
  stone: '(0.7/240) * (%rating% - 60) + 0.1,ADD_ON_DEFAULT,none,none'
  chainmail: '(0.7/240) * (%rating% - 60) + 0.1,ADD_ON_DEFAULT,none,none'
  gold: '(0.7/222.22) * (%rating% - 77.78) + 0.1,ADD_ON_DEFAULT,none,none'
  iron: '(0.7/222.22) * (%rating% - 77.78) + 0.1,ADD_ON_DEFAULT,none,none'
  diamond: '(0.7/204.44) * (%rating% - 95.56) + 0.1,ADD_ON_DEFAULT,none,none'
  netherite: '(0.7/186.67) * (%rating% - 113.33) + 0.1,ADD_ON_DEFAULT,none,none'
  prismarine: '(0.7/213.33) * (%rating% - 86.67) + 0.1,ADD_ON_DEFAULT,none,none'
  enderic: '(0.7/195.56) * (%rating% - 104.44) + 0.1,ADD_ON_DEFAULT,none,none'
  bow: '(0.7/222.22) * (%rating% - 77.78) + 0.1,ADD_ON_DEFAULT,none,none'
  crossbow: '(0.7/222.22) * (%rating% - 77.78) + 0.1,ADD_ON_DEFAULT,none,none'
  other: '(0.7/266.67) * (%rating% - 33.33) + 0.1,ADD_ON_DEFAULT,none,none'

scaling_damage_resistance:
  wood: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  leather: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  stone: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  chainmail: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  gold: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  iron: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  diamond: '(1/460) * (%rating% + 160) + 0.5,MULTIPLIER,0,none'
  netherite: '(1/420) * (%rating% + 120) + 0.5,MULTIPLIER,0,none'
  prismarine: '(1/480) * (%rating% + 180) + 0.5,MULTIPLIER,0,none'
  enderic: '(1/440) * (%rating% + 140) + 0.5,MULTIPLIER,0,none'
  bow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  crossbow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  other: '(1.4/600) * (%rating% + 300) + 0.1,MULTIPLIER,0,none'

scaling_explosion_resistance:
  wood: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  leather: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  stone: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  chainmail: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  gold: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  iron: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  diamond: '(1/460) * (%rating% + 160) + 0.5,MULTIPLIER,0,none'
  netherite: '(1/420) * (%rating% + 120) + 0.5,MULTIPLIER,0,none'
  prismarine: '(1/480) * (%rating% + 180) + 0.5,MULTIPLIER,0,none'
  enderic: '(1/440) * (%rating% + 140) + 0.5,MULTIPLIER,0,none'
  bow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  crossbow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  other: '(1.4/600) * (%rating% + 300) + 0.1,MULTIPLIER,0,none'

scaling_fire_resistance:
  wood: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  leather: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  stone: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  chainmail: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  gold: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  iron: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  diamond: '(1/460) * (%rating% + 160) + 0.5,MULTIPLIER,0,none'
  netherite: '(1/420) * (%rating% + 120) + 0.5,MULTIPLIER,0,none'
  prismarine: '(1/480) * (%rating% + 180) + 0.5,MULTIPLIER,0,none'
  enderic: '(1/440) * (%rating% + 140) + 0.5,MULTIPLIER,0,none'
  bow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  crossbow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  other: '(1.4/600) * (%rating% + 300) + 0.1,MULTIPLIER,0,none'

scaling_poison_resistance:
  wood: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  leather: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  stone: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  chainmail: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  gold: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  iron: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  diamond: '(1/460) * (%rating% + 160) + 0.5,MULTIPLIER,0,none'
  netherite: '(1/420) * (%rating% + 120) + 0.5,MULTIPLIER,0,none'
  prismarine: '(1/480) * (%rating% + 180) + 0.5,MULTIPLIER,0,none'
  enderic: '(1/440) * (%rating% + 140) + 0.5,MULTIPLIER,0,none'
  bow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  crossbow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  other: '(1.4/600) * (%rating% + 300) + 0.1,MULTIPLIER,0,none'

scaling_magic_resistance:
  wood: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  leather: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  stone: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  chainmail: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  gold: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  iron: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  diamond: '(1/460) * (%rating% + 160) + 0.5,MULTIPLIER,0,none'
  netherite: '(1/420) * (%rating% + 120) + 0.5,MULTIPLIER,0,none'
  prismarine: '(1/480) * (%rating% + 180) + 0.5,MULTIPLIER,0,none'
  enderic: '(1/440) * (%rating% + 140) + 0.5,MULTIPLIER,0,none'
  bow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  crossbow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  other: '(1.4/600) * (%rating% + 300) + 0.1,MULTIPLIER,0,none'

scaling_projectile_resistance:
  wood: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  leather: '(1/580) * (%rating% + 280) + 0.5,MULTIPLIER,0,none'
  stone: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  chainmail: '(1/540) * (%rating% + 240) + 0.5,MULTIPLIER,0,none'
  gold: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  iron: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  diamond: '(1/460) * (%rating% + 160) + 0.5,MULTIPLIER,0,none'
  netherite: '(1/420) * (%rating% + 120) + 0.5,MULTIPLIER,0,none'
  prismarine: '(1/480) * (%rating% + 180) + 0.5,MULTIPLIER,0,none'
  enderic: '(1/440) * (%rating% + 140) + 0.5,MULTIPLIER,0,none'
  bow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  crossbow: '(1/500) * (%rating% + 200) + 0.5,MULTIPLIER,0,none'
  other: '(1.4/600) * (%rating% + 300) + 0.1,MULTIPLIER,0,none'
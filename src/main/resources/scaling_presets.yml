# Scalings are basically just math equations determining the stats of potions, attributes, or enchantments through modifiers.
# In-game through modifiers they are configurable with a whole bunch of variables which can be overwhelming or annoying to do individually,
# so if you want you can pre-define them and use them in said modifiers.

# Scalings are formmated like so: EXPRESSION,MODE,LOWERBOUND,UPPERBOUND
# The EXPRESSION is the math itself, given the %rating% of the player (which usually represents skill quality or skill level) it produces somekind
# of output.
# The MODE is the manner in which the output of the formula is applied.
#   MULTIPLIER multiplies the relevant stat of the item with the output of the formula (0.5 movement speed * 1.5 = 75% movement speed)
#   ADD_ON_DEFAULT adds the relevant stat of the item onto the output of the formula (0.5 movement speed + 1.5 = 200% movement speed)
# The LOWERBOUND and UPPERBOUND are the minimum/maximum values the formula can produce. If defined, the output of the formula cannot go below minimum or above maximum
#   Using any non-numeric argument defines the scaling as having no minimum or maximum

# The usual format for scalings is the same, here's my attempt at explaining one
# example: (5.0/250) * (%rating% - 50) + 1.0
# the (5.0/250) means that the formula will go up 5 over the course of 250 points
# the (rating - 50) part means the formula is offset by 50, effectively meaning that instead of going up by 5 from 0-250 it goes up by 5 from 50-300
# the +1.0 part means the formula will start at 1.0. Since we offset the start by 50, that means at a rating of 50 the formula will produce 1.0
# Combining the 5.0 and +1.0 means that at a rating of 250 the formula will produce 6. So if a stat by default is 5 for example, it will become 11 (assuming ADD_ON_DEFAULT)

scalings:
  durability_T1: "(2/300) * %rating% + 1,MULTIPLIER,0,none"
  durability_T2: "(2/250) * (%rating% - 50) + 1,MULTIPLIER,0,none"
  durability_T3: "(2/300) * %rating% + 1,MULTIPLIER,0,none"
  durability_T4: "(2/300) * %rating% + 1,MULTIPLIER,0,none"
  durability_T5: "(2/300) * %rating% + 1,MULTIPLIER,0,none"
  example: "(4.2/300) * %rating% + 0.8,MULTIPLIER,0,none"